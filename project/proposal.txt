CS-12GP Project Proposal
Guild: Wise Guys

I. Wise Guys Guild Members
--------------------------
Nicholas Anderson -- World / Level
William Craig -- Enemies
Nathaniel Larsen -- Powerups, Projectiles
Ben Smith -- Main Character
Cole Tomaro -- HUD, Status & Instructions

II. Core Concept
----------------
Our guild project is a platform game in a single frame. The player starts at one position of the map and must find their way
to a key which unlocks a door to the next level. The player will be able to jump and pickup and throw items to help them avoid 
death from falling or from enemies encountered through the path onward.

III. Game subsystems
--------------------

A. World / Level : Nicholas Anderson

Description: The environment that the actors work in. Our world will potentially be platform style labrynth. This is still up
for change, but I believe the Wise Guys are going for a puzzle platform game type.

Classes include:
    1. Subworld of World: the world that the characters work in.
    2. Platform: The platform image of actor superclass that makes up worlds geometry.
    3. Doors and Background: Doors and background artwork that makes up platform and the world.
Planned Images:
    - Background artwork jpeg image.
    - platform jpeg image.
    - Doorways and gateway images.
    - Background obstacles and barriers.
Planned Sounds:
    - Doors and Gateways opening and or closing.
    - Potential Background music or sounds (potentially as a guild proccess).
Planned Animation:
    - Doorways, gates, bridges, and or obstacles opening or closing.



B. Player controlled main character : Ben Smith

Description: The player controlled character who will interact and engage with the obstacles and enemies put in their way.
They will be able to run, walk, and pick up  enchantments.

Classes include:
    1. Nebukar (the player's character): Can run, jump, and pick up enchanments. Able to interact with doors and obstalces to progress further through the game.
    2. Mover: The superclass for moving, jumping, and interacting with Nebukar and other potential characters. 
    3. Thrower: Handles throwing and projectile mechanics for Nebukar. 
Object Collisions: 
    - Nebukar can run and jump on platforms
    - Attack and destroy enemies and obstacles
    - Pick up enchantments to enhance their abilities and power
    - Take damage from enemy projectiles and other obstacles
    - Block projectiles with a shield
    - Open doors/portals
Planned Animations:
    - Nebukar running in both directions
    - Nebukar jumping in various directions
    - Nebukar throwing/shooting a projectile
    - Nebukar blocking with a shield
    - Nebukar activating an enchantment
Planned Images and Sources:
    - Nebukar idle
    - Nebukar running: series of images
    - Nebukar jumping and landing
    - Nebukar with a shield 
    Source: SpriteLib by Ari Feldman
Planned Sounds
    - Nebukar taking damage (a yelp or scream?)
    - Nebukar acquring a enchantment. ("lets get it!", "This'll show em!")



C. PowerUps : Nathaniel Larsen

Description: Items which can be found around the play map to help the player reach his goal of progressing through the locked door

Classes include:
    - Key - Must be picked up and taken to the door to pass through
    - Rock - Can be picked up to be thrown at enemies
    - Shield - Absorbs enemy projectiles for a given amount of hits
    - Health Potion - Restores the players health from damage taken from falling or fighting
Object collision:
    - player colliding with a health potion automatically consumes it iff any damage has been taken
    - rocks that hit enemies knock them out or kill them
    - player colliding with a shield makes them impervious to the next SHIELD_PREVENT damage
    - player colliding with key allows them to open one locked door
Planned Animations:
    - rock tumble (projectile motion) left and right
    - wave shrinking around player when shield is picked up
    AND/OR
    - smoke around player when shield is depleted
Planned Sounds:
    - Thunk sound of a rock hitting something
    - Glug sound of player drinking potion
    - 'tink' sound of shield absorbing impacts
Planned Images:
    - rock
    - red or green potion bottle
    - shield emblem
    - key



D. Enemies : William Craig

    Description: The enemies appear throught the game to deter the player from completing a puzzle, or as part of a puzzle, they can do damage to the player and be destroyed by rocks enemies will include an enemy that just walks around, an enemy that can shoot projectiles, and an enemy that can bounce.

Classes include:
    - enemies (ones that shoot projectiles, ones that just walk around, and ones that bounce)
    - projectiles (to be shot by enemies)
Object collision:
    - player colliding with projectiles thrown by the enemies cause the health displayed on the health bar to decrease
    - rocks colliding with enemies cause the enemies to die
    - enemy projectiles colliding with shield powerups cause the enemy projectile and the shield to get deleted
    - enemies colliding with the player causing the health bar to decrease in health
    - the projectiles colliding with something other then the player, causing them to disappear
Planned Animations:
    - walking animations for the walking and bouncing enemies
    - a firing animation for the enemies that shoot projectiles
    - a death animation for the enemies
Planned Sounds:
    - a walking sound for the walking enemies
    - a bouncing sound for the bouncing enemies(possibly a sound like a slime would make)
    - the sound of the projectiles firing
    - the sound of the projectiles contacting with something that's not the player
    - the sound of the projectiles hitting the player
    - the sound of the enemies dying
Planned Images:
    - enemies (different images for the different types)
    - projectiles (probably an arrow or a bullet)
    - death image (like a poof of smoke or something similar)
    - an image for when the projectiles connect with something



E. HUD, Status & Instructions : Cole Tomaro

Description: The Heads-Up Display, menus, game instructions, and other info for the player

Classes include:
    1. HealthBar: displaying how much health the player has
    2. ItemSlot: displays what items/power-ups the player currently holds
    3. Instruction: text instructions that display on screen.
    4. Menu: you know what a menu is, right?
Object Interactions (Collisions):
    - A button press will toggle the HUD visibility
    - A button press will display/dismiss instructions
Planned Animations:
    - Appearance and disappearance of HUD, menus, instructions
    - Health bar increase and decrease
Planned Images and Sources:
    - Health Bar
    - Power-up/item slot(s) (probably a simple box)
    - Instructions background
    - Menu background
    - HUD background/border?
    Source: Ari Feldman's SpriteLib
Planned Sounds
    - Sound for health loss
    - Sound when player enters low-health state
    - Sound when player picks up a power-up
